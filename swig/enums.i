%attribute(opentrace::LogLevel, int, id, id);
%attributestring(opentrace::LogLevel, std::string, name, name);
%template(EnumValueLogLevel) opentrace::EnumValue<opentrace::LogLevel, enum otc_loglevel>;
%enumextras(LogLevel);
%attribute(opentrace::DataType, int, id, id);
%attributestring(opentrace::DataType, std::string, name, name);
%template(EnumValueDataType) opentrace::EnumValue<opentrace::DataType, enum otc_datatype>;
%enumextras(DataType);
%attribute(opentrace::PacketType, int, id, id);
%attributestring(opentrace::PacketType, std::string, name, name);
%template(EnumValuePacketType) opentrace::EnumValue<opentrace::PacketType, enum otc_packettype>;
%enumextras(PacketType);
%attribute(opentrace::Quantity, int, id, id);
%attributestring(opentrace::Quantity, std::string, name, name);
%template(EnumValueQuantity) opentrace::EnumValue<opentrace::Quantity, enum otc_mq>;
%enumextras(Quantity);
%attribute(opentrace::Unit, int, id, id);
%attributestring(opentrace::Unit, std::string, name, name);
%template(EnumValueUnit) opentrace::EnumValue<opentrace::Unit, enum otc_unit>;
%enumextras(Unit);
%attribute(opentrace::QuantityFlag, int, id, id);
%attributestring(opentrace::QuantityFlag, std::string, name, name);
%template(EnumValueQuantityFlag) opentrace::EnumValue<opentrace::QuantityFlag, enum otc_mqflag>;
%enumextras(QuantityFlag);
%attribute(opentrace::TriggerMatchType, int, id, id);
%attributestring(opentrace::TriggerMatchType, std::string, name, name);
%template(EnumValueTriggerMatchType) opentrace::EnumValue<opentrace::TriggerMatchType, enum otc_trigger_matches>;
%enumextras(TriggerMatchType);
%attribute(opentrace::OutputFlag, int, id, id);
%attributestring(opentrace::OutputFlag, std::string, name, name);
%template(EnumValueOutputFlag) opentrace::EnumValue<opentrace::OutputFlag, enum otc_output_flag>;
%enumextras(OutputFlag);
%attribute(opentrace::ChannelType, int, id, id);
%attributestring(opentrace::ChannelType, std::string, name, name);
%template(EnumValueChannelType) opentrace::EnumValue<opentrace::ChannelType, enum otc_channeltype>;
%enumextras(ChannelType);
%attribute(opentrace::Capability, int, id, id);
%attributestring(opentrace::Capability, std::string, name, name);
%template(EnumValueCapability) opentrace::EnumValue<opentrace::Capability, enum otc_configcap>;
%enumextras(Capability);
%attribute(opentrace::ConfigKey, int, id, id);
%attributestring(opentrace::ConfigKey, std::string, name, name);
%template(EnumValueConfigKey) opentrace::EnumValue<opentrace::ConfigKey, enum otc_configkey>;
%enumextras(ConfigKey);
%attributestring(sigrok::ConfigKey, std::string, identifier, identifier);

