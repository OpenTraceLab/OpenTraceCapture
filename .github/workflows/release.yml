name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            name: linux
          - os: macos-14
            name: macos
          - os: windows-2022
            name: windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build pkg-config gcc g++ \
            libglib2.0-dev libglibmm-2.4-dev libusb-1.0-0-dev libzip-dev libftdi1-dev \
            libserialport-dev libhidapi-dev libieee1284-3-dev doxygen

      - name: macOS deps
        if: runner.os == 'macOS'
        run: |
          brew install meson ninja pkg-config glib glibmm libusb libzip libftdi \
            hidapi libserialport doxygen

      - name: MSYS2 setup
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-glibmm
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-libzip
            mingw-w64-x86_64-libftdi
            mingw-w64-x86_64-libserialport
            mingw-w64-x86_64-hidapi
            mingw-w64-x86_64-doxygen

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            PREFIX=/usr/local
            STRIP_PREFIX=usr/local
          else
            PREFIX=/usr
            STRIP_PREFIX=usr
          fi
          CXXFLAGS="-std=c++17" meson setup build --buildtype=release -Dbindings_cxx=true --prefix=$PREFIX
          meson compile -C build
          DESTDIR=install meson install -C build
          tar czf opentracecapture-${{ matrix.name }}.tar.gz -C install/$STRIP_PREFIX .

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          CXXFLAGS="-std=c++17" meson setup build --buildtype=release -Dbindings_cxx=true --prefix=/mingw64
          meson compile -C build
          DESTDIR=install meson install -C build
          tar czf opentracecapture-${{ matrix.name }}.tar.gz -C install/mingw64 .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: opentracecapture-${{ matrix.name }}
          path: opentracecapture-${{ matrix.name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/opentracecapture-*.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
