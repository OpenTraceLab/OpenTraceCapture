name: CI

on:
  pull_request:
    paths:
      - "src/**"
      - "meson.build"
      - "meson_options.txt"
      - "bindings/**"
  push:
    branches: [main]
    paths:
      - "src/**"
      - "meson.build"
      - "meson_options.txt"
      - "bindings/**"
  workflow_dispatch: {}   # 👈 this adds “Run workflow” in the Actions UI


concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache (ccache + meson)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ccache
            ~/.cache/meson
            C:\Users\runneradmin\.ccache
            C:\Users\runneradmin\AppData\Local\meson
          key: ${{ runner.os }}-meson-${{ hashFiles('**/meson.build','**/meson_options.txt') }}
          restore-keys: ${{ runner.os }}-meson-

      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build pkg-config gcc g++ ccache \
            libglib2.0-dev libusb-1.0-0-dev libzip-dev libftdi1-dev libserialport-dev libhidapi-dev libieee1284-3-dev
          ccache -M 1G

      - name: macOS deps
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install meson ninja pkg-config ccache glib libusb libzip libftdi hidapi libserialport
          ccache -M 1G

      - name: MSYS2 setup
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-ccache
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-libzip
            mingw-w64-x86_64-libftdi
            mingw-w64-x86_64-libserialport
            mingw-w64-x86_64-hidapi

      - name: Build & test (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          meson setup build --buildtype=release -Db_compiler_launcher=ccache
          meson configure build
          meson compile -C build
          meson test -C build --print-errorlogs

      - name: Build & test (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          meson setup build --buildtype=release -Db_compiler_launcher=ccache
          meson configure build
          meson compile -C build
          meson test -C build --print-errorlogs